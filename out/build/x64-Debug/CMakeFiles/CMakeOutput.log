The system is: Windows - 10.0.22631 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: E:/Coding/IDE/Visual Studio/Visual Studio IDE/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.34.31937 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.34.31937.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/3.24.202208181-MSVC_2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: E:/Coding/IDE/Visual Studio/Visual Studio IDE/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.34.31937 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.34.31937.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/3.24.202208181-MSVC_2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_ee436 && [1/2] Building C object CMakeFiles\cmTC_ee436.dir\CMakeCCompilerABI.c.obj
[2/2] Linking C executable cmTC_ee436.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_7fbbb && [1/2] Building CXX object CMakeFiles\cmTC_7fbbb.dir\CMakeCXXCompilerABI.cpp.obj
[2/2] Linking CXX executable cmTC_7fbbb.exe



Determining if files memory.h exist passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_fbb92 && [1/2] Building C object CMakeFiles\cmTC_fbb92.dir\HAVE_MEMORY_H.c.obj
[2/2] Linking C executable cmTC_fbb92.exe



Performing C++ SOURCE FILE Test HAVE_HEX_FP_CONSTANTS succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_56f06 && [1/2] Building CXX object CMakeFiles\cmTC_56f06.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_56f06.exe


Source file was:
int main() { float x = 0x1p-32f; }
Performing C++ SOURCE FILE Test HAVE_BINARY_CONSTANTS succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_6a32e && [1/2] Building CXX object CMakeFiles\cmTC_6a32e.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_6a32e.exe


Source file was:
int main() { int x = 0b101011; }
Performing C++ SOURCE FILE Test HAVE_CONSTEXPR succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_1d3c1 && [1/2] Building CXX object CMakeFiles\cmTC_1d3c1.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_1d3c1.exe


Source file was:
int main() { constexpr int x = 0; }
Performing C++ SOURCE FILE Test HAVE_ALIGNAS succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_d2e7e && [1/2] Building CXX object CMakeFiles\cmTC_d2e7e.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_d2e7e.exe


Source file was:
struct alignas(32) Foo { char x; }; int main() { }
Performing C++ SOURCE FILE Test HAVE_ALIGNOF succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_90bb4 && [1/2] Building CXX object CMakeFiles\cmTC_90bb4.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_90bb4.exe


Source file was:
int main() { int x = alignof(double); }
Performing C++ SOURCE FILE Test HAVE_NONPOD_IN_UNIONS succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_3e964 && [1/2] Building CXX object CMakeFiles\cmTC_3e964.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_3e964.exe


Source file was:

class Bar { public: Bar() { x = 0; } float x; };
struct Foo { union { int x[10]; Bar b; }; Foo() : b() { } };
int main() { Foo f; }

Performing C++ SOURCE FILE Test HAVE_DECLSPEC_NOINLINE succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_a8e1e && [1/2] Building CXX object CMakeFiles\cmTC_a8e1e.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_a8e1e.exe


Source file was:
__declspec(noinline) void foo() { }
int main() { }
The system is: Windows - 10.0.22631 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: E:/Coding/IDE/Visual Studio/Visual Studio IDE/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.34.31937 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.34.31937.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/3.24.202208181-MSVC_2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: E:/Coding/IDE/Visual Studio/Visual Studio IDE/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.34.31937 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.34.31937.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/3.24.202208181-MSVC_2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_38d77 && [1/2] Building C object CMakeFiles\cmTC_38d77.dir\CMakeCCompilerABI.c.obj
[2/2] Linking C executable cmTC_38d77.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_bf74b && [1/2] Building CXX object CMakeFiles\cmTC_bf74b.dir\CMakeCXXCompilerABI.cpp.obj
[2/2] Linking CXX executable cmTC_bf74b.exe



Determining if files memory.h exist passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_1423d && [1/2] Building C object CMakeFiles\cmTC_1423d.dir\HAVE_MEMORY_H.c.obj
[2/2] Linking C executable cmTC_1423d.exe



Performing C++ SOURCE FILE Test HAVE_HEX_FP_CONSTANTS succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_2c065 && [1/2] Building CXX object CMakeFiles\cmTC_2c065.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_2c065.exe


Source file was:
int main() { float x = 0x1p-32f; }
Performing C++ SOURCE FILE Test HAVE_BINARY_CONSTANTS succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_faae8 && [1/2] Building CXX object CMakeFiles\cmTC_faae8.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_faae8.exe


Source file was:
int main() { int x = 0b101011; }
Performing C++ SOURCE FILE Test HAVE_CONSTEXPR succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_af86f && [1/2] Building CXX object CMakeFiles\cmTC_af86f.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_af86f.exe


Source file was:
int main() { constexpr int x = 0; }
Performing C++ SOURCE FILE Test HAVE_ALIGNAS succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_bd929 && [1/2] Building CXX object CMakeFiles\cmTC_bd929.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_bd929.exe


Source file was:
struct alignas(32) Foo { char x; }; int main() { }
Performing C++ SOURCE FILE Test HAVE_ALIGNOF succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_1333b && [1/2] Building CXX object CMakeFiles\cmTC_1333b.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_1333b.exe


Source file was:
int main() { int x = alignof(double); }
Performing C++ SOURCE FILE Test HAVE_NONPOD_IN_UNIONS succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_119af && [1/2] Building CXX object CMakeFiles\cmTC_119af.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_119af.exe


Source file was:

class Bar { public: Bar() { x = 0; } float x; };
struct Foo { union { int x[10]; Bar b; }; Foo() : b() { } };
int main() { Foo f; }

Performing C++ SOURCE FILE Test HAVE_DECLSPEC_NOINLINE succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_9cbe9 && [1/2] Building CXX object CMakeFiles\cmTC_9cbe9.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_9cbe9.exe


Source file was:
__declspec(noinline) void foo() { }
int main() { }
Performing C++ SOURCE FILE Test HAVE__ALIGNED_MALLOC succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_191b0 && [1/2] Building CXX object CMakeFiles\cmTC_191b0.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_191b0.exe


Source file was:

#include <malloc.h>
int main() { void * ptr = _aligned_malloc(1024, 32); }

Performing C++ SOURCE FILE Test HAVE_THREAD_LOCAL succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_6d4a3 && [1/2] Building CXX object CMakeFiles\cmTC_6d4a3.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_6d4a3.exe


Source file was:

#ifdef __CYGWIN__
// Hack to work around https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64697
#error "No thread_local on cygwin"
#endif  // __CYGWIN__
thread_local int x; int main() { }

Performing C++ SOURCE FILE Test HAVE_DECLSPEC_THREAD succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_50da0 && [1/2] Building CXX object CMakeFiles\cmTC_50da0.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_50da0.exe


Source file was:

__declspec(thread) int x; int main() { }

Determining if the include file sys/types.h exists passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_3ff3d && [1/2] Building C object CMakeFiles\cmTC_3ff3d.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_3ff3d.exe



Determining if the include file stdint.h exists passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_33a8a && [1/2] Building C object CMakeFiles\cmTC_33a8a.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_33a8a.exe



Determining if the include file stddef.h exists passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_102b6 && [1/2] Building C object CMakeFiles\cmTC_102b6.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_102b6.exe



Determining if the include file inttypes.h exists passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_18fd1 && [1/2] Building C object CMakeFiles\cmTC_18fd1.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_18fd1.exe



Determining if the include file stdlib.h exists passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_91031 && [1/2] Building C object CMakeFiles\cmTC_91031.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_91031.exe



Determining if the include file string.h exists passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_b9975 && [1/2] Building C object CMakeFiles\cmTC_b9975.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_b9975.exe



Determining if the include file sys/stat.h exists passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_3e31a && [1/2] Building C object CMakeFiles\cmTC_3e31a.dir\CheckIncludeFile.c.obj
[2/2] Linking C executable cmTC_3e31a.exe



Determining if the include file unordered_map exists passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_bbdf1 && [1/2] Building CXX object CMakeFiles\cmTC_bbdf1.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_bbdf1.exe



Determining if the include file unordered_set exists passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_8147e && [1/2] Building CXX object CMakeFiles\cmTC_8147e.dir\CheckIncludeFile.cxx.obj
[2/2] Linking CXX executable cmTC_8147e.exe



Determining size of unsigned __int16 passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_0e86a && [1/2] Building C object CMakeFiles\cmTC_0e86a.dir\HAVE___UINT16.c.obj
[2/2] Linking C executable cmTC_0e86a.exe



Determining size of uint16_t passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_e2eab && [1/2] Building C object CMakeFiles\cmTC_e2eab.dir\HAVE_UINT16_T.c.obj
[2/2] Linking C executable cmTC_e2eab.exe



Determining if the snprintf exist passed with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_855ce && [1/2] Building C object CMakeFiles\cmTC_855ce.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_855ce.exe


File E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef snprintf
  return ((int*)(&snprintf))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing C SOURCE FILE Test HAVE___DECLSPEC succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_2e437 && [1/2] Building C object CMakeFiles\cmTC_2e437.dir\src.c.obj
[2/2] Linking C executable cmTC_2e437.exe


Source file was:

__declspec(selectany) int a;
int main(void) { return 0; }

Performing C++ SOURCE FILE Test STL_STD_NAMESPACE succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_60d04 && [1/2] Building CXX object CMakeFiles\cmTC_60d04.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_60d04.exe


Source file was:

#include <vector>
std::vector<int> t; int main() { }

Performing C++ SOURCE FILE Test HAVE_USING_OPERATOR succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_f2d0f && [1/2] Building CXX object CMakeFiles\cmTC_f2d0f.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_f2d0f.exe


Source file was:

#include <iostream>
std::ostream& operator<<(std::ostream&, struct s);
using ::operator<<;
int main() { }

Performing C++ SOURCE FILE Test HAVE_NAMESPACES succeeded with the following output:
Change Dir: E:/Coding/github repo/pbrt-v3/pbrt-v3/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):E:/Coding/IDE/Visual Studio/Visual Studio IDE/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_68862 && [1/2] Building CXX object CMakeFiles\cmTC_68862.dir\src.cxx.obj
[2/2] Linking CXX executable cmTC_68862.exe


Source file was:

namespace Outer { namespace Inner { int i = 0; }}
using namespace Outer::Inner;;
int main() { return i; }

